<?xml version="1.0" ?>

<!--****************************************************************************
Configuration file for ASTER, the Assistive Smart Text Editor.
********************************************************************************-->

<Aster>
  <!--Version number of this config file-->
  <Version version="0.6"/>

  <SwitchMap>
    <Map name="S9" onTrigger="default()"/>
    <Map name="S1" onTrigger="default()"/>
    <Map name="S2" onTrigger="default()"/>
    <Map name="S6" onTrigger="default()"/>
  </SwitchMap>

  <!--
******************************************************
 Key Mappings
******************************************************
-->

  <!-- Mapping of button keys to the values they will generate
  when the key is selected.  
  "Map" element attributes:
    name:  Internal name of the button in the UI
    label: The string that will be displayed on screen for this button
    value: The value this button represents.  Prefix the value with an
           @ symbol to indicate this is a special function key
    fontsize:  Size of font to use for this button.  Overrides the
               default setting
    offset1:  For buttons that have to display two characters, the
              zero-based offset from the left edge of the bounding
              rectangle, of the first character
    offset2:  For buttons that have to display two characters, the
              zero-based offset from the left edge of the bounding
              rectangle, of the second character
  -->
  <ButtonAttributes>

    <ButtonAttribute name="ContextMenuTitle" label="" value="" fontsize="20" fontname="Arial" mouseClickActuate="false"/>
    
    <ButtonAttribute name="ItemIcon1" label=" " value="@CmdGoBack" fontsize="20" fontname="Hawking" mouseClickActuate="true"/>
    <ButtonAttribute name="ItemText1" label="(" value="@CmdGoBack" fontsize="18" fontname="Hawking" mouseClickActuate="true"/>

    <ButtonAttribute name="ItemIcon2" label="&#x0161;" value="@WindowPosSizeContextMenu" fontsize="20" fontname="Hawking" mouseClickActuate="true"/>
    <ButtonAttribute name="ItemText2" label="Window" value="@WindowPosSizeContextMenu" fontsize="18" fontname="Arial" mouseClickActuate="true"/>
  </ButtonAttributes>

  <!--
******************************************************
  Screen layout. 
  This section lists the parent-child relationships
  between the widgets for each screen.
  For instance, it shows that Box1 has four rows
  (Row1, Row2, Row3 and Row4) and each row has buttons
  
  Attributes:
    "screen":  Same as the name of the .NET form
    "class":   The type of the widget. Must be one 
               of the pre-defined supported types of Aster
    "name":    Name of the widget. Has to be the same as
               the name of the .NET control in the form
******************************************************
-->

  <Layout>
    <Widget class="Row" name="TitleRow">
      <Widget class="ScannerButton" name="ContextMenuTitle" colorScheme="ContextMenuTitle"/>
    </Widget>
    <Widget class="Row" name="Row1">
      <Widget class="ContextMenuIcon" name="ItemIcon1"/>
      <Widget class="ContextMenuText" name="ItemText1"/>
    </Widget>
    <Widget class="Row" name="Row2">
      <Widget class="ContextMenuIcon" name="ItemIcon2"/>
      <Widget class="ContextMenuText" name="ItemText2"/>
    </Widget>
  </Layout>


  <!--
******************************************************taskmanager
  Animations
******************************************************
-->

  <!-- Here, all the animations are configured. This includes
  the sequence of animations. For each animation, the list of 
  UI elements (widgets) is listed.  These widgets will be
  highlighted in the order they are listed.
  
  "Animation" element attributes:
    name:       A name for this animation.
    screen:     Which UI screen is this associated with.  Currently,
                the UI has only one screen (Aster).  This will be
                extended to multiple screens - one with navigation, 
                one for mouse control etc.  The name should match the
                name of the form in the UI
    start:    	If true, start with this animation when form is loaded.
    iterations: Number of times to repeat this animation. If the user has 
                not made any selection during the rotation, the actions 
                associated with the 'onEnd' attribute are triggered.
                Set this to -1 to iterate forever.
    onEnd:      The actions to be triggered if the user has not
                made any selection during the rotation and the
                rotation has come to an end.
    hesitateTime: The additional amount of delay that will be added to 
                  the stepping time. This delay is applicable only
                  for the first widget in the animation.
    onSelect:   The actions to perform if the user selects a UI element 
                in this animation.
  
  "Widget" element attributes:              
    name:           Name of the widget.  Must match the name of the UI element
                    in the form.
    onSelect:       The actions to perform if the user selects this widget. If
                    the parent animation also has a onSelect attribute, the onSelect
                    for the widget is first executed followed by the onSelect for the
                    parent animation.
    onHighlightOn:  During a rotation, the actions to perform when the widget 
                    is highlighted
    onHighlightOff: During a rotation, the actions to perform whtn the widget 
                    is unhighlighted
    hesitateTime:   The additional amount of time this widget will stay highlighted
                    during a rotation.
  -->

  <!--name of the scheme, selected through preferences.-->
  <Animations>

    <!--
      start:      Set to true which means this animation is the one to start with
                  when the form is displayed.
      iterations: Set to -1, which means this will go on forever.
     -->
    <Animation name="TopLevelRotation"
               start="true"
               onEnter=""
               autoStart="true"
               steppingTime="@TabScanTime"
               iterations="@RowScanIterations">
      <Widget name="Row1" onSelect="actuate(ItemText1);transition(TopLevelRotation)"/>
      <Widget name="Row2" onSelect="actuate(ItemText2);transition(TopLevelRotation)"/>
    </Animation>
  </Animations>
</Aster>


